datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [pg_trgm]
}

generator client {
  provider        = "prisma-client-js"
  // output          = "./generated/client"
  previewFeatures = ["fullTextSearchPostgres", "postgresqlExtensions"]
}

// Enums
enum partner_type {
  PRINTER
  DTP
  EDITOR
  DESIGNER
  PAPER_SUPPLIER
  BINDER
}

enum book_kind {
  HARDCOVER
  PAPERBACK
  EBOOK
}

enum book_binding {
  PERFECT
  SADDLE_STITCH
  CASE
}

enum book_status {
  IN_STOCK
  FORTHCOMING
}

enum mv_dir {
  IN
  OUT
}

enum job_status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum print_job_type {
  INNER
  COVER
}

enum job_order_type {
  FIXED
  PER_UNIT
}

enum payment_mode {
  CASH
  CREDIT_CARD
  DEBIT_CARD
  UPI
  BANK_TRANSFER
}

enum customer_source {
  STORE
  BOOK_FAIR
  EXHIBITION
  OTHER
}

enum cart_status {
  ACTIVE
  MERGED
  ABANDONED
  ORDERED
}

enum order_status {
  PENDING
  CONFIRMED
  ALLOCATED
  PACKED
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
}

enum payment_status {
  UNPAID
  AUTHORIZED
  PAID
  PARTIAL_REFUND
  REFUNDED
  FAILED
  DISPUTED
}

enum refund_status {
  REQUESTED
  PROCESSING
  COMPLETED
  FAILED
}

enum shipment_carrier {
  DTDC
  BLUEDART
  INDIAPOST
  SELF
}

enum shipping_method {
  STANDARD
  EXPRESS
  PICKUP
}

enum shipment_status {
  READY
  IN_TRANSIT
  OUT_FOR_DELIVERY
  DELIVERED
  RTO
  LOST
  CANCELLED
}

enum stage {
  DTP
  EDITING
  PROOFREADING
  COVER_DESIGN
  COVER_SETTING
  PRINTING
  LAMINATION
  BINDING
}

// Additional enums
enum invoice_status {
  DRAFT
  ISSUED
  FINALIZED
  CANCELLED
}

enum discount_type {
  PERCENT
  FLAT
}

enum discount_target {
  ORDER
  ITEM
  SHIPPING
}

//  Product Catalog & Core Content
model languages {
  id    BigInt  @id @default(autoincrement())
  code  String  @unique
  name  String
  books books[]

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

model categories {
  id                  BigInt                @id @default(autoincrement())
  name                String                @unique
  books               books[]
  customer_interests  customer_interests[]
  discount_categories discount_categories[]
  
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

model authors {
  id           BigInt         @id @default(autoincrement())
  name         String
  email        String?
  phone        String?        @db.VarChar(10)
  notes        String?
  created_at   DateTime       @default(now()) @db.Timestamptz
  updated_at   DateTime       @updatedAt @db.Timestamptz
  book_authors book_authors[]

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model books {
  id                  BigInt                @id @default(autoincrement())
  isbn_13             String?               @unique
  isbn_10             String?               @unique
  title               String
  subtitle            String?
  description         String?
  sample_preview_url  String?
  language_id         BigInt
  category_id         BigInt
  edition             Int?
  publication_year    Int?
  kind                book_kind?
  binding             book_binding?
  page_count          Int?
  trim_size_mm        String?
  mrp                 Decimal?              @db.Decimal(10, 2)
  status              String?
  stock_qty           Int?                  @default(0)
  created_at          DateTime              @default(now()) @db.Timestamptz
  updated_at          DateTime              @updatedAt @db.Timestamptz
  language            languages             @relation(fields: [language_id], references: [id])
  category            categories            @relation(fields: [category_id], references: [id])
  book_authors        book_authors[]
  print_runs          print_runs[]
  stock_movements     stock_movements[]
  cart_items          cart_items[]
  order_items         order_items[]
  exam_requests       exam_requests[]
  wishlists           wishlists[]
  reviews             reviews[]
  homepage_trending   homepage_trending[]
  homepage_upcoming   homepage_upcoming[]
  discount_books      discount_books[]
  dtp_jobs            dtp_jobs[]
  editing_jobs        editing_jobs[]
  proofreading_jobs   proofreading_jobs[]
  printing_jobs       printing_jobs[]
  cover_design_jobs   cover_design_jobs[]
  cover_setting_jobs  cover_setting_jobs[]
  lamination_jobs     lamination_jobs[]
  binding_jobs        binding_jobs[]
  invoice_items       invoice_items[]
  // author_names       String?
  v_inventory_on_hand v_inventory_on_hand[] @ignore
  v_book_stage_latest v_book_stage_latest[] @ignore

  @@index([title(ops: raw("gin_trgm_ops"))], type: Gin)
  // @@index([author_names(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([isbn_13(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([isbn_10(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([description(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([subtitle(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([language_id])
  @@index([category_id])
  @@index([status])
  @@map("books")
}

model book_authors {
  book_id   BigInt  @map("book_id")
  author_id BigInt  @map("author_id")
  role      String
  book      books   @relation(fields: [book_id], references: [id])
  author    authors @relation(fields: [author_id], references: [id])

  @@id([book_id, author_id, role])
  @@index([book_id])
  @@index([author_id])
}

model blogs {
  id           BigInt    @id @default(autoincrement())
  slug         String    @unique
  title        String
  category     String?
  published_at DateTime? @db.Timestamptz
  created_at   DateTime  @default(now()) @db.Timestamptz
  updated_at   DateTime  @updatedAt @db.Timestamptz

  @@index([title(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([category])
}

// Customers & User Engagement

model addresses {
  id                 BigInt               @id @default(autoincrement())
  line1              String
  line2              String?
  city               String
  state              String?
  pincode            String
  country            String
  created_at         DateTime             @default(now()) @db.Timestamptz
  updated_at         DateTime             @updatedAt @db.Timestamptz
  partners           partners[]
  warehouses         warehouses[]
  customer_addresses customer_addresses[]
  orders_billing     orders[]             @relation("billing")
  orders_shipping    orders[]             @relation("shipping")
  shipments          shipments[]          @relation("shipping")
  invoices           invoices[]
}

model customers {
  id                   BigInt                 @id @default(autoincrement())
  uuid                 String                 @unique @default(uuid())
  name                 String
  phone                String?                @db.VarChar(10)
  email                String?
  source               customer_source
  fair_exhibition      String?
  created_at           DateTime               @default(now()) @db.Timestamptz
  updated_at           DateTime               @updatedAt @db.Timestamptz
  customer_interests   customer_interests[]
  customer_addresses   customer_addresses[]
  carts                carts[]
  orders               orders[]
  exam_requests        exam_requests[]
  wishlists            wishlists[]
  reviews              reviews[]
  discount_redemptions discount_redemptions[]
  invoices             invoices[]

  @@index([email])
  @@index([phone])
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

model customer_interests {
  customer_id BigInt
  category_id BigInt
  created_at  DateTime   @default(now()) @db.Timestamptz
  updated_at  DateTime   @updatedAt @db.Timestamptz
  customer    customers  @relation(fields: [customer_id], references: [id])
  category    categories @relation(fields: [category_id], references: [id])

  @@id([customer_id, category_id])
  @@index([category_id])
}

model customer_addresses {
  id                  BigInt    @id @default(autoincrement())
  customer_id         BigInt
  address_id          BigInt
  is_default_shipping Boolean   @default(false)
  is_default_billing  Boolean   @default(false)
  created_at          DateTime  @default(now()) @db.Timestamptz
  updated_at          DateTime  @updatedAt @db.Timestamptz
  customer            customers @relation(fields: [customer_id], references: [id])
  address             addresses @relation(fields: [address_id], references: [id])
}

model exam_requests {
  id          BigInt    @id @default(autoincrement())
  user_id     BigInt
  book_id     BigInt
  institution String
  purpose     String
  status      String // received, reviewing, approved, rejected
  created_at  DateTime  @default(now()) @db.Timestamptz
  updated_at  DateTime  @updatedAt @db.Timestamptz
  book        books     @relation(fields: [book_id], references: [id])
  customer    customers @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([book_id])
  @@index([status])
  @@index([created_at])
}

model wishlists {
  id         BigInt     @id @default(autoincrement())
  user_id    BigInt?
  session_id String?
  book_id    BigInt
  created_at DateTime   @default(now()) @db.Timestamptz
  updated_at DateTime   @updatedAt @db.Timestamptz
  book       books      @relation(fields: [book_id], references: [id])
  customer   customers? @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([session_id])
  @@index([book_id])
}

model reviews {
  id           BigInt    @id @default(autoincrement())
  book_id      BigInt
  user_id      BigInt
  rating       Int
  comment      String?
  is_moderated Boolean   @default(false)
  created_at   DateTime  @default(now()) @db.Timestamptz
  updated_at   DateTime  @updatedAt @db.Timestamptz
  book         books     @relation(fields: [book_id], references: [id])
  customer     customers @relation(fields: [user_id], references: [id])

  @@index([book_id])
  @@index([user_id])
  @@index([rating])
  @@index([comment(ops: raw("gin_trgm_ops"))], type: Gin)
}

// E-commerce & Online Sales Flow

model carts {
  id             BigInt           @id @default(autoincrement())
  customer_id    BigInt?
  token          String?          @unique
  status         cart_status
  currency       String
  created_at     DateTime         @default(now()) @db.Timestamptz
  updated_at     DateTime         @updatedAt @db.Timestamptz
  customer       customers?       @relation(fields: [customer_id], references: [id])
  cart_items     cart_items[]
  orders         orders[]
  cart_discounts cart_discounts[]

  @@index([customer_id])
  @@index([status])
}

model cart_items {
  id         BigInt   @id @default(autoincrement())
  cart_id    BigInt
  book_id    BigInt
  qty        Int
  unit_price Decimal  @db.Decimal(10, 2)
  created_at DateTime @default(now()) @db.Timestamptz
  updated_at DateTime @updatedAt @db.Timestamptz
  cart       carts    @relation(fields: [cart_id], references: [id])
  book       books    @relation(fields: [book_id], references: [id])

  @@index([cart_id])
  @@index([book_id])
}

model orders {
  id                   BigInt                 @id @default(autoincrement())
  order_no             String                 @unique
  uuid                 String                 @unique @default(uuid())
  customer_id          BigInt
  cart_id              BigInt
  billing_address_id   BigInt
  shipping_address_id  BigInt
  status               order_status
  payment_status       payment_status
  currency             String
  subtotal             Decimal                @db.Decimal(10, 2)
  discount_total       Decimal                @db.Decimal(10, 2)
  tax_total            Decimal                @db.Decimal(10, 2)
  shipping_fee         Decimal                @db.Decimal(10, 2)
  grand_total          Decimal                @db.Decimal(10, 2)
  notes                String?
  placed_at            DateTime               @default(now()) @db.Timestamptz
  created_at           DateTime               @default(now()) @db.Timestamptz
  updated_at           DateTime               @updatedAt @db.Timestamptz
  customer             customers              @relation(fields: [customer_id], references: [id])
  cart                 carts                  @relation(fields: [cart_id], references: [id])
  billing_address      addresses              @relation("billing", fields: [billing_address_id], references: [id])
  shipping_address     addresses              @relation("shipping", fields: [shipping_address_id], references: [id])
  order_items          order_items[]
  order_events         order_events[]
  payments             payments[]
  shipments            shipments[]
  order_discounts      order_discounts[]
  discount_redemptions discount_redemptions[]

  @@index([customer_id])
  @@index([cart_id])
  @@index([billing_address_id])
  @@index([shipping_address_id])
  @@index([status])
  @@index([payment_status])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model order_items {
  id                   BigInt                 @id @default(autoincrement())
  order_id             BigInt
  book_id              BigInt
  qty                  Int
  unit_price           Decimal                @db.Decimal(10, 2)
  discount_amount      Decimal                @db.Decimal(10, 2)
  tax_amount           Decimal                @db.Decimal(10, 2)
  line_total           Decimal                @db.Decimal(10, 2)
  created_at           DateTime               @default(now()) @db.Timestamptz
  updated_at           DateTime               @updatedAt @db.Timestamptz
  order                orders                 @relation(fields: [order_id], references: [id])
  book                 books                  @relation(fields: [book_id], references: [id])
  shipment_items       shipment_items[]
  stock_reservations   stock_reservations[]
  order_item_discounts order_item_discounts[]

  @@index([order_id])
  @@index([book_id])
}

model order_events {
  id          BigInt        @id @default(autoincrement())
  order_id    BigInt
  event_type  String
  from_status order_status?
  to_status   order_status?
  occurred_at DateTime      @default(now()) @db.Timestamptz
  note        String?
  order       orders        @relation(fields: [order_id], references: [id])

  @@index([order_id])
  @@index([event_type])
}

model payments {
  id                  BigInt         @id @default(autoincrement())
  order_id            BigInt
  amount              Decimal        @db.Decimal(10, 2)
  status              payment_status
  mode                payment_mode
  provider            String?
  provider_order_id   String?
  provider_payment_id String?
  authorized_at       DateTime?      @db.Timestamptz
  captured_at         DateTime?      @db.Timestamptz
  failed_at           DateTime?      @db.Timestamptz
  created_at          DateTime       @default(now()) @db.Timestamptz
  updated_at          DateTime       @updatedAt @db.Timestamptz
  order               orders         @relation(fields: [order_id], references: [id])
  refunds             refunds[]

  @@index([order_id])
  @@index([status])
  @@index([mode])
}

model refunds {
  id                 BigInt        @id @default(autoincrement())
  payment_id         BigInt
  amount             Decimal       @db.Decimal(10, 2)
  status             refund_status
  reason             String?
  provider_refund_id String?
  refunded_at        DateTime?     @db.Timestamptz
  created_at         DateTime      @default(now()) @db.Timestamptz
  updated_at         DateTime      @updatedAt @db.Timestamptz
  payment            payments      @relation(fields: [payment_id], references: [id])

  @@index([payment_id])
  @@index([status])
}

// Shipping & Inventory

model warehouses {
  id                  BigInt                @id @default(autoincrement())
  name                String                @unique
  address_id          BigInt
  created_at          DateTime              @default(now()) @db.Timestamptz
  updated_at          DateTime              @updatedAt @db.Timestamptz
  address             addresses             @relation(fields: [address_id], references: [id])
  stock_movements     stock_movements[]
  shipments           shipments[]
  stock_reservations  stock_reservations[]
  invoices            invoices[]
  v_inventory_on_hand v_inventory_on_hand[] @ignore

  @@index([address_id])
}

model print_runs {
  id               BigInt            @id @default(autoincrement())
  book_id          BigInt
  run_no           Int
  qty_received     Int
  date_received    DateTime?         @db.Date
  printer_inner_id BigInt?
  printer_cover_id BigInt?
  created_at       DateTime          @default(now()) @db.Timestamptz
  updated_at       DateTime          @updatedAt @db.Timestamptz
  book             books             @relation(fields: [book_id], references: [id])
  printer_inner    partners?         @relation("printer_inner", fields: [printer_inner_id], references: [id])
  printer_cover    partners?         @relation("printer_cover", fields: [printer_cover_id], references: [id])
  stock_movements  stock_movements[]
  

  @@index([book_id])
  @@index([printer_inner_id])
  @@index([printer_cover_id])
  @@index([run_no])
}

model stock_movements {
  id           BigInt      @id @default(autoincrement())
  book_id      BigInt
  print_run_id BigInt?
  warehouse_id BigInt
  dir          mv_dir
  qty          Int
  reason       String?
  ref_table    String?
  ref_id       BigInt?
  occurred_at  DateTime    @default(now()) @db.Timestamptz
  created_at   DateTime    @default(now()) @db.Timestamptz
  updated_at   DateTime    @updatedAt @db.Timestamptz
  book         books       @relation(fields: [book_id], references: [id])
  print_run    print_runs? @relation(fields: [print_run_id], references: [id])
  warehouse    warehouses  @relation(fields: [warehouse_id], references: [id])

  @@index([book_id])
  @@index([print_run_id])
  @@index([warehouse_id])
  @@index([dir])
  @@index([reason(ops: raw("gin_trgm_ops"))], type: Gin)
}

model shipments {
  id                  BigInt           @id @default(autoincrement())
  order_id            BigInt
  warehouse_id        BigInt
  shipping_address_id BigInt
  carrier             shipment_carrier
  method              shipping_method
  status              shipment_status
  tracking_no         String?
  shipped_at          DateTime?        @db.Timestamptz
  delivered_at        DateTime?        @db.Timestamptz
  created_at          DateTime         @default(now()) @db.Timestamptz
  updated_at          DateTime         @updatedAt @db.Timestamptz
  order               orders           @relation(fields: [order_id], references: [id])
  warehouse           warehouses       @relation(fields: [warehouse_id], references: [id])
  shipping_address    addresses        @relation("shipping", fields: [shipping_address_id], references: [id])
  shipment_items      shipment_items[]

  @@index([order_id])
  @@index([warehouse_id])
  @@index([shipping_address_id])
  @@index([status])
}

model shipment_items {
  id            BigInt      @id @default(autoincrement())
  shipment_id   BigInt
  order_item_id BigInt
  qty           Int
  shipment      shipments   @relation(fields: [shipment_id], references: [id])
  order_item    order_items @relation(fields: [order_item_id], references: [id])

  @@index([shipment_id])
  @@index([order_item_id])
}

model stock_reservations {
  id            BigInt      @id @default(autoincrement())
  order_item_id BigInt
  warehouse_id  BigInt
  qty           Int
  reserved_at   DateTime    @default(now()) @db.Timestamptz
  released_at   DateTime?   @db.Timestamptz
  order_item    order_items @relation(fields: [order_item_id], references: [id])
  warehouse     warehouses  @relation(fields: [warehouse_id], references: [id])

  @@index([order_item_id])
  @@index([warehouse_id])
}

model v_inventory_on_hand {
  book_id      BigInt
  warehouse_id BigInt
  qty_on_hand  Int
  book         books      @relation(fields: [book_id], references: [id])
  warehouse    warehouses @relation(fields: [warehouse_id], references: [id])

  @@ignore
}

// Production & Partner Workflow

model partners {
  id                  BigInt                @id @default(autoincrement())
  name                String
  type                partner_type
  contact_person      String?
  phone               String?               @db.VarChar(10)
  email               String?
  gst_no              String?
  address_id          BigInt
  active              Boolean               @default(true)
  created_at          DateTime              @default(now()) @db.Timestamptz
  updated_at          DateTime              @updatedAt @db.Timestamptz
  address             addresses             @relation(fields: [address_id], references: [id])
  paper_supply_orders paper_supply_orders[]
  print_runs_inner    print_runs[]          @relation("printer_inner")
  print_runs_cover    print_runs[]          @relation("printer_cover")
  dtp_jobs            dtp_jobs[]
  editing_jobs        editing_jobs[]
  proofreading_jobs   proofreading_jobs[]
  printing_jobs       printing_jobs[]
  cover_design_jobs   cover_design_jobs[]
  cover_setting_jobs  cover_setting_jobs[]
  lamination_jobs     lamination_jobs[]
  binding_jobs        binding_jobs[]
  
  @@index([address_id])
  @@index([type])
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  // @@index([contact_person(ops: raw("gin_trgm_ops"))], type: Gin)
}

model paper_supply_orders {
  id             BigInt         @id @default(autoincrement())
  partner_id     BigInt
  status         job_status
  date_expected  DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  qty            Int?
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz
  partner        partners       @relation(fields: [partner_id], references: [id])

  @@index([partner_id])
  @@index([status])
  @@index([date_expected])
  @@index([date_completed])
}

model dtp_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_received  DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  qty_expected   Int?
  qty_completed  Int?
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model editing_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_received  DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model proofreading_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_received  DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model printing_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  job_type       print_job_type
  status         job_status
  date_mailed    DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  qty_expected   Int?
  qty_completed  Int?
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([job_type])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model cover_design_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_sent      DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model cover_setting_jobs {
  id           BigInt         @id @default(autoincrement())
  book_id      BigInt
  partner_id   BigInt
  status       job_status
  date_started DateTime?      @db.Date
  due_date     DateTime?      @db.Date
  unit_cost    Decimal?       @db.Decimal(10, 2)
  order_type   job_order_type
  rate         Decimal?       @db.Decimal(10, 2)
  total        Decimal?       @db.Decimal(10, 2)
  is_paid      Boolean        @default(false)
  payment_mode payment_mode?
  is_due       Boolean        @default(false)
  notes        String?
  book         books          @relation(fields: [book_id], references: [id])
  partner      partners       @relation(fields: [partner_id], references: [id])
  created_at   DateTime       @default(now()) @db.Timestamptz
  updated_at   DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model lamination_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_received  DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  qty_expected   Int?
  qty_completed  Int?
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model binding_jobs {
  id             BigInt         @id @default(autoincrement())
  book_id        BigInt
  partner_id     BigInt
  status         job_status
  date_sent      DateTime?      @db.Date
  date_started   DateTime?      @db.Date
  due_date       DateTime?      @db.Date
  date_completed DateTime?      @db.Date
  qty_expected   Int?
  qty_completed  Int?
  unit_cost      Decimal?       @db.Decimal(10, 2)
  order_type     job_order_type
  rate           Decimal?       @db.Decimal(10, 2)
  total          Decimal?       @db.Decimal(10, 2)
  is_paid        Boolean        @default(false)
  payment_mode   payment_mode?
  is_due         Boolean        @default(false)
  notes          String?
  book           books          @relation(fields: [book_id], references: [id])
  partner        partners       @relation(fields: [partner_id], references: [id])
  created_at     DateTime       @default(now()) @db.Timestamptz
  updated_at     DateTime       @updatedAt @db.Timestamptz

  @@index([book_id])
  @@index([partner_id])
  @@index([status])
  @@index([due_date])
  @@index([date_completed])
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model v_book_stage_latest {
  book_id       BigInt
  stage         stage
  status        job_status
  last_event_at DateTime?  @db.Date
  book          books      @relation(fields: [book_id], references: [id])

  @@ignore
}

// Marketing, Discounts & Promotions

model discounts {
  id                       BigInt          @id @default(autoincrement())
  name                     String
  description              String?
  code_required            Boolean         @default(false)
  target                   discount_target
  discount_type            discount_type
  amount                   Decimal         @db.Decimal(10, 2)
  max_discount_amount      Decimal?        @db.Decimal(10, 2)
  min_order_value          Decimal?        @db.Decimal(10, 2)
  min_items_qty            Int?
  first_order_only         Boolean         @default(false)
  is_exclusive             Boolean         @default(false)
  once_per_order           Boolean         @default(false)
  starts_at                DateTime?
  ends_at                  DateTime?
  usage_limit_total        Int?
  usage_limit_per_customer Int?
  is_active                Boolean         @default(true)
  created_by               BigInt?
  created_at               DateTime        @default(now()) @db.Timestamptz
  updated_at               DateTime        @updatedAt @db.Timestamptz

  creator                   staff?                      @relation("discount_created_by", fields: [created_by], references: [id])
  discount_codes            discount_codes[]
  discount_books            discount_books[]
  discount_categories       discount_categories[]
  discount_payment_modes    discount_payment_modes[]
  discount_customer_sources discount_customer_sources[]
  order_discounts           order_discounts[]
  order_item_discounts      order_item_discounts[]
  discount_redemptions      discount_redemptions[]
  cart_discounts            cart_discounts[]

  @@index([is_active])
  @@index([target])
  @@index([discount_type])
  @@index([starts_at])
  @@index([ends_at])
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  // @@index([description(ops: raw("gin_trgm_ops"))], type: Gin)
}

model discount_codes {
  id              BigInt    @id @default(autoincrement())
  discount_id     BigInt
  code            String    @unique
  max_redemptions Int?
  starts_at       DateTime?
  ends_at         DateTime?
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now()) @db.Timestamptz
  updated_at      DateTime  @updatedAt @db.Timestamptz

  discount             discounts              @relation(fields: [discount_id], references: [id])
  order_discounts      order_discounts[]
  order_item_discounts order_item_discounts[]
  discount_redemptions discount_redemptions[]
  cart_discounts       cart_discounts[]

  @@index([discount_id])
  @@index([is_active])
  @@index([starts_at])
  @@index([ends_at])
}

model discount_books {
  discount_id BigInt
  book_id     BigInt
  discount    discounts @relation(fields: [discount_id], references: [id])
  book        books     @relation(fields: [book_id], references: [id])

  @@id([discount_id, book_id])
  @@index([book_id])
}

model discount_categories {
  discount_id BigInt
  category_id BigInt
  discount    discounts  @relation(fields: [discount_id], references: [id])
  category    categories @relation(fields: [category_id], references: [id])

  @@id([discount_id, category_id])
  @@index([category_id])
}

model discount_payment_modes {
  discount_id  BigInt
  payment_mode payment_mode
  discount     discounts    @relation(fields: [discount_id], references: [id])

  @@id([discount_id, payment_mode])
  @@index([payment_mode])
}

model discount_customer_sources {
  discount_id BigInt
  source      customer_source
  discount    discounts       @relation(fields: [discount_id], references: [id])

  @@id([discount_id, source])
  @@index([source])
}

model order_discounts {
  id               BigInt   @id @default(autoincrement())
  order_id         BigInt
  discount_id      BigInt
  discount_code_id BigInt?
  amount_applied   Decimal  @db.Decimal(10, 2)
  description      String?
  created_at       DateTime @default(now()) @db.Timestamptz

  order         orders          @relation(fields: [order_id], references: [id])
  discount      discounts       @relation(fields: [discount_id], references: [id])
  discount_code discount_codes? @relation(fields: [discount_code_id], references: [id])

  @@index([order_id])
  @@index([discount_id])
  @@index([discount_code_id])
}

model order_item_discounts {
  id               BigInt   @id @default(autoincrement())
  order_item_id    BigInt
  discount_id      BigInt
  discount_code_id BigInt?
  amount_applied   Decimal  @db.Decimal(10, 2)
  created_at       DateTime @default(now()) @db.Timestamptz

  order_item    order_items     @relation(fields: [order_item_id], references: [id])
  discount      discounts       @relation(fields: [discount_id], references: [id])
  discount_code discount_codes? @relation(fields: [discount_code_id], references: [id])

  @@index([order_item_id])
  @@index([discount_id])
  @@index([discount_code_id])
}

model discount_redemptions {
  id               BigInt   @id @default(autoincrement())
  discount_id      BigInt
  discount_code_id BigInt
  order_id         BigInt
  customer_id      BigInt
  amount_applied   Decimal  @db.Decimal(10, 2)
  created_at       DateTime @default(now()) @db.Timestamptz

  discount      discounts      @relation(fields: [discount_id], references: [id])
  discount_code discount_codes @relation(fields: [discount_code_id], references: [id])
  order         orders         @relation(fields: [order_id], references: [id])
  customer      customers      @relation(fields: [customer_id], references: [id])

  @@index([discount_id])
  @@index([discount_code_id])
  @@index([order_id])
  @@index([customer_id])
}

model cart_discounts {
  id               BigInt   @id @default(autoincrement())
  cart_id          BigInt
  discount_id      BigInt
  discount_code_id BigInt?
  amount_estimated Decimal  @db.Decimal(10, 2)
  created_at       DateTime @default(now()) @db.Timestamptz
  updated_at       DateTime @updatedAt @db.Timestamptz

  cart          carts           @relation(fields: [cart_id], references: [id])
  discount      discounts       @relation(fields: [discount_id], references: [id])
  discount_code discount_codes? @relation(fields: [discount_code_id], references: [id])

  @@index([cart_id])
  @@index([discount_id])
  @@index([discount_code_id])
}

model homepage_trending {
  id         BigInt    @id @default(autoincrement())
  book_id    BigInt
  position   Int
  starts_at  DateTime?
  ends_at    DateTime?
  created_by BigInt?
  note       String?
  created_at DateTime  @default(now()) @db.Timestamptz
  updated_at DateTime  @updatedAt @db.Timestamptz
  book       books     @relation(fields: [book_id], references: [id])
  creator    staff?    @relation("homepage_trending_created_by", fields: [created_by], references: [id])

  @@index([book_id])
  @@index([created_by])
  @@index([position])
}

model homepage_upcoming {
  id                    BigInt    @id @default(autoincrement())
  book_id               BigInt
  expected_release_date DateTime? @db.Date
  preorder_enabled      Boolean   @default(false)
  position              Int
  display_from          DateTime?
  display_to            DateTime?
  created_by            BigInt?
  note                  String?
  created_at            DateTime  @default(now()) @db.Timestamptz
  updated_at            DateTime  @updatedAt @db.Timestamptz
  book                  books     @relation(fields: [book_id], references: [id])
  creator               staff?    @relation("homepage_upcoming_created_by", fields: [created_by], references: [id])

  @@index([book_id])
  @@index([created_by])
  @@index([preorder_enabled])
  @@index([expected_release_date])
}


// Internal Operations & Offline Sales

model staff {
  id                BigInt              @id @default(autoincrement())
  name              String
  phone             String?             @db.VarChar(10)
  email             String?
  date_of_birth     DateTime?           @db.Date
  aadhaar_number    String?
  cv_url            String?
  joining_date      DateTime?           @db.Date
  salary            Decimal?            @db.Decimal(10, 2)
  created_at        DateTime            @default(now()) @db.Timestamptz
  updated_at        DateTime            @updatedAt @db.Timestamptz
  invoices          invoices[]
  homepage_trending homepage_trending[] @relation("homepage_trending_created_by")
  homepage_upcoming homepage_upcoming[] @relation("homepage_upcoming_created_by")
  discounts_created discounts[]         @relation("discount_created_by")

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

model invoices {
  id                  BigInt          @id @default(autoincrement())
  invoice_no          String          @unique
  uuid                String          @unique @default(uuid())
  status              invoice_status
  customer_id         BigInt?
  customer_name       String?
  customer_phone      String?         @db.VarChar(10)
  customer_email      String?
  billing_address_id  BigInt?
  warehouse_id        BigInt?
  salesman_id         BigInt?
  send_online_invoice Boolean         @default(false)
  payment_mode        payment_mode?
  payment_status      payment_status?
  subtotal            Decimal         @db.Decimal(10, 2)
  discount_total      Decimal         @db.Decimal(10, 2)
  tax_total           Decimal         @db.Decimal(10, 2)
  grand_total         Decimal         @db.Decimal(10, 2)
  notes               String?
  issued_at           DateTime?       @db.Timestamptz
  finalized_at        DateTime?       @db.Timestamptz
  created_at          DateTime        @default(now()) @db.Timestamptz
  updated_at          DateTime        @updatedAt @db.Timestamptz

  customer        customers?      @relation(fields: [customer_id], references: [id])
  billing_address addresses?      @relation(fields: [billing_address_id], references: [id])
  warehouse       warehouses?     @relation(fields: [warehouse_id], references: [id])
  salesman        staff?          @relation(fields: [salesman_id], references: [id])
  invoice_items   invoice_items[]

  @@index([customer_id])
  @@index([billing_address_id])
  @@index([warehouse_id])
  @@index([salesman_id])
  @@index([status])
  @@index([issued_at])
  @@index([finalized_at])
  @@index([customer_name(ops: raw("gin_trgm_ops"))], type: Gin)
  // @@index([notes(ops: raw("gin_trgm_ops"))], type: Gin)
}

model invoice_items {
  id              BigInt   @id @default(autoincrement())
  invoice_id      BigInt
  book_id         BigInt
  qty             Int
  unit_price      Decimal  @db.Decimal(10, 2)
  discount_amount Decimal  @db.Decimal(10, 2)
  tax_amount      Decimal  @db.Decimal(10, 2)
  line_total      Decimal  @db.Decimal(10, 2)
  created_at      DateTime @default(now()) @db.Timestamptz
  updated_at      DateTime @updatedAt @db.Timestamptz
  invoice         invoices @relation(fields: [invoice_id], references: [id])
  book            books    @relation(fields: [book_id], references: [id])

  @@index([invoice_id])
  @@index([book_id])
}